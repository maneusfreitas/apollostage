@using System.Security.Claims;
@model ApolloStage.Models.Dashboard
@{
    double totalSpending = Model.orders.Sum(o => (double)o.TotalTshirtPrice);
    double biggestNum = Model.orders.Max(o => (double)o.TotalTshirtPrice);
}

@{
    string meu = TempData["meu"]?.ToString();
    string name = TempData["name"]?.ToString();
}
@{
    ViewData["Title"] = "Home Page";
    @if (meu == "True")
        Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    else
        Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (meu == "True")
{

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.bundle.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"></script>
    <link href='https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css' rel='stylesheet'>
    <link href='https://unicons.iconscout.com/release/v3.0.6/css/line.css' rel='stylesheet'>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>



    <section id="wrapper">

        <div class="p-4">
            <div class="welcome">
                <div class="content rounded-3 p-3">
                    <h1 class="fs-3 text-white">Welcome to Dashboard</h1>
                    <p class="mb-0">Hello @name, welcome to your dashboard!</p>
                </div>
            </div>

            <section class="statistics mt-4">
                <div class="row">
                    <div class="col-lg-4">
                        <div class="box d-flex rounded-2 align-items-center mb-4 mb-lg-0 p-3">
                            <i class="uil-envelope-shield fs-2 text-center bg-primary rounded-circle"></i>
                            <div class="ms-3">
                                <div class="d-flex align-items-center">
                                    <h3 class="mb-0">@Model.TotalEmail</h3> <span class="d-block ms-2">Emails</span>
                                </div>
                                <p class="fs-normal mb-0">Total Emails sent by the Services</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="box d-flex rounded-2 align-items-center mb-4 mb-lg-0 p-3">
                            <i class="uil-file fs-2 text-center bg-danger rounded-circle"></i>
                            <div class="ms-3">
                                <div class="d-flex align-items-center">
                                    <h3 class="mb-0">@Model.TotalProducts</h3> <span class="d-block ms-2">Products</span>
                                </div>
                                <p class="fs-normal mb-0">Total existing products</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="box d-flex rounded-2 align-items-center p-3">
                            <i class="uil-users-alt fs-2 text-center bg-success rounded-circle"></i>
                            <div class="ms-3">
                                <div class="d-flex align-items-center">
                                    <h3 class="mb-0">@Model.TotalUsers</h3> <span class="d-block ms-2">Users</span>
                                </div>
                                <p class="fs-normal mb-0">Total off Users</p>
                            </div>
                        </div>
                    </div>
                </div>
            </section>


            <section class="admins mt-4">
                <div class="row">
                    @foreach (var report in Model.Reports)
                    {

                        <div class="admin box d-flex align-items-center rounded-2 p-3 mb-4 col-md-6">
                            <div class="img">
                                <p class="mb-0">@report.Id</p>
                            </div>
                            <div class="ms-3">
                                <h3 class="fs-5 mb-1">@report.causa  -  @report.IdUserMail</h3>
                                <p class="mb-0">@report.descricao</p>

                            </div>
                            <div class="row">
                                <button class="aproveremove" onclick="aproveReviewReport(@report.Id)"> <i class="fa fa-check"></i></button>
                                <button class="aproveremove" onclick="removeReviewReport(@report.Id)">  <i class="fa fa-times"></i></button>
                            </div>
                        </div>
                    }
                </div>
            </section>

            <section class="statis mt-4 text-center">
                <div class="row">
                    <div class="col-md-6 col-lg-3 mb-4 mb-lg-0">
                        <div class="box bg-primary p-3">
                            <i class="uil-eye"></i>
                            <h3>@Model.TotalListenList</h3>
                            <p class="lead">Total Users listenLists</p>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-3 mb-4 mb-lg-0">
                        <div class="box bg-danger p-3">
                            <i class="uil-user"></i>
                            <h3>@Model.TotalReviews</h3>
                            <p class="lead">Total Users Reviews</p>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-3 mb-4 mb-md-0">
                        <div class="box bg-warning p-3">
                            <i class="uil-shopping-cart"></i>
                            <h3>@Model.TotalProductSales</h3>
                            <p class="lead">Total Product Sales </p>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-3">
                        <div class="box bg-success p-3">
                            <i class="uil-feedback"></i>
                            <h3>@Model.TotalRatings</h3>
                            <p class="lead">Total Users Ratings</p>
                        </div>
                    </div>
                </div>
            </section>
            <div class="row">
                <section class="charts mt-4">

                    <div class="card">
                        <section class="card_header">
                            <aside class="card_header_balance">
                                <p>My balance</p>
                                <h3>@Model.balance€</h3>
                            </aside>
                            <aside class="card_header_logo">
                                <img src="./images/logo.svg" alt="">
                            </aside>
                        </section>

                        <section class="card_body">
                            <h3>Sales - Last 7 days</h3>
                            <!-- Chart Bars -->
                            <section class="bar_canvas">
                                @foreach (var order in Model.orders)
                                {
                                    if (order.DayOfWeek != "")
                                    {
                                        // Calcular a altura da barra como um número decimal
                                        double barHeight = (10 * order.TotalTshirtPrice) / biggestNum;

                                        // Converter o preço para um inteiro
                                        int priceInt = (int)order.TotalTshirtPrice;

                                        <aside style="--i:@(barHeight.ToString("0.##", System.Globalization.CultureInfo.InvariantCulture) + "rem"); --price:'@(order.TotalTshirtPrice.ToString("F2"))€'">
                                            <p>@order.DayOfWeek</p>
                                        </aside>
                                    }
                                }
                            </section>

                            <section class="card_footer">
                                <aside class="card_footer_total">
                                    <p>Total this month</p>
                                    <h1>@totalSpending.ToString("F2")€</h1>
                                </aside>
                                <aside class="card_footer_lastmonth">
                                    <h4>+2.4%</h4>
                                    <p>from last month</p>
                                </aside>

                            </section>

                        </section>

                    </div>



                </section>

                <section class="charts mt-4">

                    <div class="card">
                        <section class="card_header">
                            <aside class="card_header_balance">
                                <p>Circular Chart</p>
                                <h3>Reviews Chart</h3>
                            </aside>
                            <aside class="card_header_logo">
                                <img src="./images/logo.svg" alt="">
                            </aside>
                        </section>
                        <section class="card_body">
                            <h3>Order by Status</h3>
                            <div class="wrapper">
                                <div class="pie-charts">
                                    <div class="pieID--micro-skills pie-chart--wrapper">

                                        <div class="pie-chart">
                                            <div class="pie-chart__pie"></div>

                                            <ul class="pie-chart__legend">
                                                @foreach (var report in Model.ordercoutstatus)
                                                {
                                                    <li><em>@report.State </em><span>@report.Count</span></li>
                                                }
                                            </ul>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </section>

                    </div>
                </section>
            </div>

            <div class="row">
                <section class="charts mt-4">

                    <div class="card">
                        <section class="card_header">
                            <aside class="card_header_balance">
                                <p>Circular Chart</p>
                                <h3>Gender Chart</h3>
                            </aside>
                            <aside class="card_header_logo">
                                <img src="./images/logo.svg" alt="">
                            </aside>
                        </section>
                        <section class="card_body">
                            <h3>Classification by Gender</h3>
                            <div class="wrapper">
                                <div class="pie-charts">
                                    <div class="pieID--micro-skills2 pie-chart--wrapper">

                                        <div class="pie-chart">
                                            <div class="pie-chart__pie2"></div>

                                            <ul class="pie-chart__legend2">
                                                @foreach (var item in Model.GenderChart)
                                                {
                                                    <li><em>@item.Key </em><span>@item.Value</span></li>
                                                }
                                            </ul>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </section>

                    </div>
                </section>
                <section class="charts mt-4">

                    <div class="card">
                        <section class="card_header">
                            <aside class="card_header_balance">
                                <p>from 1 to 10</p>
                                <h3>Statistic by Classifications</h3>
                            </aside>
                            <aside class="card_header_logo">
                                <img src="./images/logo.svg" alt="">
                            </aside>
                        </section>

                        <section class="card_body">
                            <h3>Average Album Rating</h3>
                            <section class="bar_canvas">
                                @foreach (var order in Model.averageRatings)
                                {
                                    <aside style="--i:@(order.Count + "rem"); --price:'@(order.Count + " votes")'">
                                        <p>@order.StarRating</p>
                                    </aside>

                                }
                            </section>



                        </section>

                    </div>



                </section>


            </div>
        </div>
    </section>


    <script>

        function removeReviewReport(reviewId) {
        var formData = {
            reviewId: reviewId
        };

        $.ajax({
            type: 'GET',
            url: '@Url.Action("removeReview", "Account")',
            data: formData,
            success: function(response) {
                console.log(response);
                location.reload();
            },
            error: function(error) {
                console.error('Erro ao enviar os dados do formulário via AJAX:', error);
            }
        });
    }

      function aproveReviewReport(reviewId) {
        var formData = {
            reviewId: reviewId
        };

        $.ajax({
            type: 'GET',
            url: '@Url.Action("aproveReview", "Account")',
            data: formData,
            success: function(response) {
                console.log(response);
                location.reload();
            },
            error: function(error) {
                console.error('Erro ao enviar os dados do formulário via AJAX:', error);
            }
        });
    }

    </script>

    <style>
        i#menuIcon {
            font-size: 2rem;
        }
        section.card_body h3 {
            text-align: center;
        }

        section.card_body .wrapper {
            width: 100% !important;
        }
        button.aproveremove {
            width: 50px;
            margin-left: 25px;
            background-color: transparent;
        }

        .fa.fa-check {
            position: relative;
            text-align: right;
            color: white;
            font-size: 25px;
        }

        .fa.fa-times {
            position: relative;
            text-align: right;
            color: white;
            font-size: 25px;
        }

        @@import 'https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet';

        :root {
            --dk-gray-100: #F3F4F6;
            --dk-gray-200: #E5E7EB;
            --dk-gray-300: #D1D5DB;
            --dk-gray-400: #9CA3AF;
            --dk-gray-500: #6B7280;
            --dk-gray-600: #4B5563;
            --dk-gray-700: #374151;
            --dk-gray-800: #1F2937;
            --dk-gray-900: #111827;
            --dk-dark-bg: #313348;
            --dk-darker-bg: #2a2b3d;
            --navbar-bg-color: #6f6486;
            --sidebar-bg-color: #252636;
            --sidebar-width: 250px;
        }



        #wrapper {
            transition: all .3s ease-in-out;
        }

            #wrapper.fullwidth {
                margin-left: 0;
            }





        /** --------------------------------
         -- welcome
        -------------------------------- */
        .welcome {
            color: #ffffff,
        }

            .welcome .content {
                background-color: #000000
            }

            .welcome p {
                color: #ffffff;
            }




        /** --------------------------------
         -- Statistics
        -------------------------------- */
        .statistics {
            color: #FFFFFF
        }

            .statistics .box {
                background-color: #000000;
            }

                .statistics .box i {
                    width: 60px;
                    height: 60px;
                    line-height: 60px;
                }

                .statistics .box p {
                    color: #FFFFFF
                }

        .bg-primary {
            background-color: #008661 !important;
        }

        .bg-danger {
            background-color: #00BF63 !important;
        }

        .bg-success {
            background-color: #5AB3A7 !important;
        }

        .bg-warning {
            background-color: #545454 !important;
        }



        /** --------------------------------
         -- Charts
        -------------------------------- */
        .charts .chart-container {
            background-color: var(--dk-dark-bg);
        }

            .charts .chart-container h3 {
                color: var(--dk-gray-400)
            }




        /** --------------------------------
         -- users
        -------------------------------- */
        .admins .box .admin {
            background-color: var(--dk-dark-bg);
        }

        .admins .box h3 {
            color: var(--dk-gray-300);
        }

        .admins .box p {
            color: var(--dk-gray-400)
        }




        /** --------------------------------
         -- statis
        -------------------------------- */
        .statis {
            color: var(--dk-gray-100);
        }

            .statis .box {
                position: relative;
                overflow: hidden;
                border-radius: 3px;
            }

                .statis .box h3:after {
                    content: "";
                    height: 2px;
                    width: 70%;
                    margin: auto;
                    background-color: rgba(255, 255, 255, 0.12);
                    display: block;
                    margin-top: 10px;
                }

                .statis .box i {
                    position: absolute;
                    height: 70px;
                    width: 70px;
                    font-size: 22px;
                    padding: 15px;
                    top: -25px;
                    left: -25px;
                    background-color: rgba(255, 255, 255, 0.15);
                    line-height: 60px;
                    text-align: right;
                    border-radius: 50%;
                }





        .main-color {
            color: #ffc107
        }




        ::-webkit-scrollbar {
            background: transparent;
            width: 5px;
            height: 5px;
        }

        ::-webkit-scrollbar-thumb {
            background-color: #3c3f58;
        }

            ::-webkit-scrollbar-thumb:hover {
                background-color: rgba(0, 0, 0, 0.3);
            }





        .card {
            min-width: 400px;
            margin: 0 auto;
            font-family: sans-serif;
        }

        .card_body {
            background-color: #fffcf7;
            border-radius: 1rem 1rem 0 0;
            padding: 0 2rem;
            border-radius: 1rem;
        }

            .card_body h3 {
                padding: 1rem 0;
            }

        .bar_canvas {
            background-color: #fffcf7;
            display: flex;
            flex-direction: row;
            align-items: flex-end;
            justify-content: space-around;
            gap: .8rem;
            height: 17.4rem;
            padding: 0 0 2rem 0;
        }



            .bar_canvas > aside:hover {
                background-color: #000000;
            }

            .bar_canvas > aside {
                background-color: #000000 !important;
                height: var(--i);
                margin: 0;
                padding: 0;
                flex: 1;
                border-radius: .2rem;
                position: relative;
                animation: rise .5s .1s ease-out forwards;
            }

                .bar_canvas > aside:hover::after {
                    content: var(--price);
                    color: #b4dfe5;
                    padding: .4rem;
                    text-align: center;
                    width: 100%;
                    background: black;
                    position: absolute;
                    top: 0;
                    left: 50%;
                    font-size: .8rem;
                    transform: translate(-50%,-2rem);
                }

                .bar_canvas > aside p {
                    position: absolute;
                    bottom: 0;
                    left: 50%;
                    margin: 0;
                    padding: 0;
                    transform: translate(-50%,1.2rem);
                }

        .card_footer {
            background-color: #fffcf7;
            display: flex;
            justify-content: space-between;
            align-items: flex-end;
            padding: 2rem 0;
            border-top: .1rem solid var(--dk-dark-bg);
        }

        .card_footer_total > p {
            font-size: .8rem;
            text-align: center;
            margin: 0;
            opacity: .5;
        }

        .card_footer_total > h1 {
            font-size: 1.8rem;
            margin: 0;
            opacity: 0;
            animation: text_fade 1s .3s ease-out forwards;
        }

        .card_footer_lastmonth > h4, p {
            margin: 0;
            text-align: right;
        }

        .card_footer_lastmonth p {
            font-size: .8rem;
            opacity: .5;
        }

        .card_header {
            display: flex;
            justify-content: space-between;
            background-color: #;
            align-items: center;
            padding: 1rem 2rem;
            border-radius: 3px;
        }

        .card_header_balance :where(p,h3) {
            color: #fffcf7;
            margin: 0;
            text-align: left;
        }

        .card_header_balance p {
            font-size: .8rem;
        }

        .card_header_balance h3 {
            font-size: 1.2rem;
        }

        @@keyframes rise {
            from {
                height: 0;
                background-color: #000000;
            }

            to {
                height: var(--i);
                background-color: var(--dk-dark-bg);
            }
        }

        @@keyframes text_fade {
            from {
                opacity: 0;
            }

            to {
                opacity: 100%;
            }
        }

        .author_info {
            margin: 1rem 0;
            width: 100%;
            background: rgba(0, 0, 0, 0.7);
            border-radius: 5px;
            padding: .2rem;
            display: flex;
            color: #fff;
        }

            .author_info p,
            .author_info ul {
                margin: 0 auto;
                font-size: .7rem;
            }

            .author_info ul {
                list-style: '➤ ';
                display: flex;
                justify-content: flex-end;
                align-items: center;
                gap: 2rem;
            }

                .author_info ul li a {
                    text-decoration: none;
                    color: #fff;
                }

                    .author_info ul li a:hover {
                        appearance: none;
                        text-decoration: underline;
                        text-shadow: 0px 0px 5px #fff;
                    }

                .author_info ul li:hover {
                    transform: scale(1.1);
                }

        section.charts.mt-4 {
            width: 50%;
            padding-right: 10px;
        }
    </style>


    <script>// Other important pens.
        // Map: https://codepen.io/themustafaomar/pen/ZEGJeZq
        // Navbar: https://codepen.io/themustafaomar/pen/VKbQyZ

        'use strict'

        function $(selector) {
            return document.querySelector(selector)
        }

        function find(el, selector) {
            let finded
            return (finded = el.querySelector(selector)) ? finded : null
        }

        function siblings(el) {
            const siblings = []
            for (let sibling of el.parentNode.children) {
                if (sibling !== el) {
                    siblings.push(sibling)
                }
            }
            return siblings
        }

        const showAsideBtn = $('.show-side-btn')
        const sidebar = $('.sidebar')
        const wrapper = $('#wrapper')

        showAsideBtn.addEventListener('click', function () {
            $(`#${this.dataset.show}`).classList.toggle('show-sidebar')
            wrapper.classList.toggle('fullwidth')
        })

        if (window.innerWidth < 767) {
            sidebar.classList.add('show-sidebar');
        }

        window.addEventListener('resize', function () {
            if (window.innerWidth > 767) {
                sidebar.classList.remove('show-sidebar')
            }
        })

        // dropdown menu in the side nav
        var slideNavDropdown = $('.sidebar-dropdown');

        $('.sidebar .categories').addEventListener('click', function (event) {
            event.preventDefault()

            const item = event.target.closest('.has-dropdown')

            if (!item) {
                return
            }

            item.classList.toggle('opened')

            siblings(item).forEach(sibling => {
                sibling.classList.remove('opened')
            })

            if (item.classList.contains('opened')) {
                const toOpen = find(item, '.sidebar-dropdown')

                if (toOpen) {
                    toOpen.classList.add('active')
                }

                siblings(item).forEach(sibling => {
                    const toClose = find(sibling, '.sidebar-dropdown')

                    if (toClose) {
                        toClose.classList.remove('active')
                    }
                })
            } else {
                find(item, '.sidebar-dropdown').classList.toggle('active')
            }
        })

        $('.sidebar .close-aside').addEventListener('click', function () {
            $(`#${this.dataset.close}`).classList.add('show-sidebar')
            wrapper.classList.remove('margin')
        })


        // Global defaults
        Chart.defaults.global.animation.duration = 2000; // Animation duration
        Chart.defaults.global.title.display = false; // Remove title
        Chart.defaults.global.defaultFontColor = '#71748c'; // Font color
        Chart.defaults.global.defaultFontSize = 13; // Font size for every label

        // Tooltip global resets
        Chart.defaults.global.tooltips.backgroundColor = '#111827'
        Chart.defaults.global.tooltips.borderColor = 'blue'

        // Gridlines global resets
        Chart.defaults.scale.gridLines.zeroLineColor = '#3b3d56'
        Chart.defaults.scale.gridLines.color = '#3b3d56'
        Chart.defaults.scale.gridLines.drawBorder = false

        // Legend global resets
        Chart.defaults.global.legend.labels.padding = 0;
        Chart.defaults.global.legend.display = false;

        // Ticks global resets
        Chart.defaults.scale.ticks.fontSize = 12
        Chart.defaults.scale.ticks.fontColor = '#71748c'
        Chart.defaults.scale.ticks.beginAtZero = false
        Chart.defaults.scale.ticks.padding = 10

        // Elements globals
        Chart.defaults.global.elements.point.radius = 0

        // Responsivess
        Chart.defaults.global.responsive = true
        Chart.defaults.global.maintainAspectRatio = false

        // The bar chart
        var myChart = new Chart(document.getElementById('myChart'), {
            type: 'bar',
            data: {
                labels: ["January", "February", "March", "April", 'May', 'June', 'August', 'September'],
                datasets: [{
                    label: "Lost",
                    data: [45, 25, 40, 20, 60, 20, 35, 25],
                    backgroundColor: "#0d6efd",
                    borderColor: 'transparent',
                    borderWidth: 2.5,
                    barPercentage: 0.4,
                }, {
                    label: "Succes",
                    startAngle: 2,
                    data: [20, 40, 20, 50, 25, 40, 25, 10],
                    backgroundColor: "#dc3545",
                    borderColor: 'transparent',
                    borderWidth: 2.5,
                    barPercentage: 0.4,
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        gridLines: {},
                        ticks: {
                            stepSize: 15,
                        },
                    }],
                    xAxes: [{
                        gridLines: {
                            display: false,
                        }
                    }]
                }
            }
        })

        // The line chart
        var chart = new Chart(document.getElementById('myChart2'), {
            type: 'line',
            data: {
                labels: ["January", "February", "March", "April", 'May', 'June', 'August', 'September'],
                datasets: [{
                    label: "My First dataset",
                    data: [4, 20, 5, 20, 5, 25, 9, 18],
                    backgroundColor: 'transparent',
                    borderColor: '#0d6efd',
                    lineTension: .4,
                    borderWidth: 1.5,
                }, {
                    label: "Month",
                    data: [11, 25, 10, 25, 10, 30, 14, 23],
                    backgroundColor: 'transparent',
                    borderColor: '#dc3545',
                    lineTension: .4,
                    borderWidth: 1.5,
                }, {
                    label: "Month",
                    data: [16, 30, 16, 30, 16, 36, 21, 35],
                    backgroundColor: 'transparent',
                    borderColor: '#f0ad4e',
                    lineTension: .4,
                    borderWidth: 1.5,
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        gridLines: {
                            drawBorder: false
                        },
                        ticks: {
                            stepSize: 12,
                        }
                    }],
                    xAxes: [{
                        gridLines: {
                            display: false,
                        },
                    }]
                }
            }
        })

        var chart = document.getElementById('chart3');
        var myChart = new Chart(chart, {
            type: 'line',
            data: {
                labels: ["One", "Two", "Three", "Four", "Five", 'Six', "Seven", "Eight"],
                datasets: [{
                    label: "Lost",
                    lineTension: 0.2,
                    borderColor: '#d9534f',
                    borderWidth: 1.5,
                    showLine: true,
                    data: [3, 30, 16, 30, 16, 36, 21, 40, 20, 30],
                    backgroundColor: 'transparent'
                }, {
                    label: "Lost",
                    lineTension: 0.2,
                    borderColor: '#5cb85c',
                    borderWidth: 1.5,
                    data: [6, 20, 5, 20, 5, 25, 9, 18, 20, 15],
                    backgroundColor: 'transparent'
                },
                {
                    label: "Lost",
                    lineTension: 0.2,
                    borderColor: '#f0ad4e',
                    borderWidth: 1.5,
                    data: [12, 20, 15, 20, 5, 35, 10, 15, 35, 25],
                    backgroundColor: 'transparent'
                },
                {
                    label: "Lost",
                    lineTension: 0.2,
                    borderColor: '#337ab7',
                    borderWidth: 1.5,
                    data: [16, 25, 10, 25, 10, 30, 14, 23, 14, 29],
                    backgroundColor: 'transparent'
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        gridLines: {
                            drawBorder: false
                        },
                        ticks: {
                            stepSize: 12
                        }
                    }],
                    xAxes: [{
                        gridLines: {
                            display: false,
                        },
                    }],
                }
            }
        })</script>






    <style>


        @@-webkit-keyframes bake-pie {
            from {
                transform: rotate(0deg) translate3d(0, 0, 0);
            }
        }

        @@keyframes bake-pie {
            from {
                transform: rotate(0deg) translate3d(0, 0, 0);
            }
        }

        .pie-chart {
            font-family: "Open Sans", Arial;
        }

        .pie-chart--wrapper {
            width: 400px;
            margin: 30px auto;
            text-align: center;
        }

        .pie-chart__pie, .pie-chart__legend {
            display: inline-block;
            vertical-align: top;
        }

        .pie-chart__pie2, .pie-chart__legend2 {
            display: inline-block;
            vertical-align: top;
        }

        .pie-chart__pie {
            position: relative;
            height: 200px;
            width: 200px;
            margin: 10px auto 35px;
        }

            .pie-chart__pie::before {
                content: "";
                display: block;
                position: absolute;
                z-index: 1;
                width: 100px;
                height: 100px;
                background: #EEE;
                border-radius: 50%;
                top: 50px;
                left: 50px;
            }

            .pie-chart__pie::after {
                content: "";
                display: block;
                width: 120px;
                height: 2px;
                background: rgba(0, 0, 0, 0.1);
                border-radius: 50%;
                box-shadow: 0 0 3px 4px rgba(0, 0, 0, 0.1);
                margin: 220px auto;
            }

        .pie-chart__pie2 {
            position: relative;
            height: 200px;
            width: 200px;
            margin: 10px auto 35px;
        }

            .pie-chart__pie2::before {
                content: "";
                display: block;
                position: absolute;
                z-index: 1;
                width: 100px;
                height: 100px;
                background: #EEE;
                border-radius: 50%;
                top: 50px;
                left: 50px;
            }

            .pie-chart__pie2::after {
                content: "";
                display: block;
                width: 120px;
                height: 2px;
                background: rgba(0, 0, 0, 0.1);
                border-radius: 50%;
                box-shadow: 0 0 3px 4px rgba(0, 0, 0, 0.1);
                margin: 220px auto;
            }

        .slice {
            position: absolute;
            width: 200px;
            height: 200px;
            clip: rect(0px, 200px, 200px, 100px);
            -webkit-animation: bake-pie 1s;
            animation: bake-pie 1s;
        }

            .slice span {
                display: block;
                position: absolute;
                top: 0;
                left: 0;
                background-color: black;
                width: 200px;
                height: 200px;
                border-radius: 50%;
                clip: rect(0px, 200px, 200px, 100px);
            }

        .pie-chart__legend {
            display: block;
            list-style-type: none;
            padding: 0;
            margin: 0 auto;
            background: #FFF;
            padding: 0.75em 0.75em 0.05em;
            font-size: 14px;
            box-shadow: 1px 1px 0 #DDD, 2px 2px 0 #BBB;
            text-align: left;
            width: 90%;
        }

            .pie-chart__legend li {
                height: 1.25em;
                margin-bottom: 0.7em;
                padding-left: 0.5em;
                border-left: 1.25em solid black;
            }

            .pie-chart__legend em {
                font-style: normal;
            }

            .pie-chart__legend span {
                float: right;
            }


        .pie-chart__legend2 {
            display: block;
            list-style-type: none;
            padding: 0;
            margin: 0 auto;
            background: #FFF;
            padding: 0.75em 0.75em 0.05em;
            font-size: 14px;
            box-shadow: 1px 1px 0 #DDD, 2px 2px 0 #BBB;
            text-align: left;
            width: 90%;
        }

            .pie-chart__legend2 li {
                height: 1.25em;
                margin-bottom: 0.7em;
                padding-left: 0.5em;
                border-left: 1.25em solid black;
            }

            .pie-chart__legend2 em {
                font-style: normal;
            }

            .pie-chart__legend2 span {
                float: right;
            }


        .pie-charts {
            display: flex;
            flex-direction: row;
        }

        @@media (max-width: 500px) {
            .pie-charts {
                flex-direction: column;
            }
        }

        .card_footer_lastmonth > h4, p {
            margin: 0;
            text-align: center !important;
        }

        .content.rounded-3.p-3 p {
            text-align: left !important;
        }

        .admin {
            width: 48%;
            margin-right: 1%;
            margin-left: 1%;
            background-color: var(--dk-dark-bg);
        }
    </style>


    <script src="https://code.jquery.com/jquery-2.2.4.min.js"></script>

    <script src="https://codepen.io/MaciejCaputa/pen/EmMooZ.js"></script>


    <script>function sliceSize(dataNum, dataTotal) {
            return (dataNum / dataTotal) * 360;
        }

        function addSlice(id, sliceSize, pieElement, offset, sliceID, color) {
            $(pieElement).append("<div class='slice " + sliceID + "'><span></span></div>");
            var offset = offset - 1;
            var sizeRotation = -179 + sliceSize;

            $(id + " ." + sliceID).css({
                "transform": "rotate(" + offset + "deg) translate3d(0,0,0)"
            });

            $(id + " ." + sliceID + " span").css({
                "transform": "rotate(" + sizeRotation + "deg) translate3d(0,0,0)",
                "background-color": color
            });
        }

        function iterateSlices(id, sliceSize, pieElement, offset, dataCount, sliceCount, color) {
            var
                maxSize = 179,
                sliceID = "s" + dataCount + "-" + sliceCount;

            if (sliceSize <= maxSize) {
                addSlice(id, sliceSize, pieElement, offset, sliceID, color);
            } else {
                addSlice(id, maxSize, pieElement, offset, sliceID, color);
                iterateSlices(id, sliceSize - maxSize, pieElement, offset + maxSize, dataCount, sliceCount + 1, color);
            }
        }

        function createPie(id) {
            var
                listData = [],
                listTotal = 0,
                offset = 0,
                i = 0,
                pieElement = id + " .pie-chart__pie"
            dataElement = id + " .pie-chart__legend"

            color = [
                "cornflowerblue",
                "olivedrab",
                "turquoise",
                "forestgreen",
                "navy"
            ];

            color = shuffle(color);

            $(dataElement + " span").each(function () {
                listData.push(Number($(this).html()));
            });

            for (i = 0; i < listData.length; i++) {
                listTotal += listData[i];
            }

            for (i = 0; i < listData.length; i++) {
                var size = sliceSize(listData[i], listTotal);
                iterateSlices(id, size, pieElement, offset, i, 0, color[i]);
                $(dataElement + " li:nth-child(" + (i + 1) + ")").css("border-color", color[i]);
                offset += size;
            }
        }

        function shuffle(a) {
            var j, x, i;
            for (i = a.length; i; i--) {
                j = Math.floor(Math.random() * i);
                x = a[i - 1];
                a[i - 1] = a[j];
                a[j] = x;
            }

            return a;
        }
        function createPie2(id) {
            var
                listData = [],
                listTotal = 0,
                offset = 0,
                i = 0,
                pieElement = id + " .pie-chart__pie2"
            dataElement = id + " .pie-chart__legend2"

            color = [
                "cornflowerblue",
                "olivedrab",
                "tomato",
                "purple",
                "turquoise",
                "forestgreen",
                "navy"
            ];

            color = shuffle(color);

            $(dataElement + " span").each(function () {
                listData.push(Number($(this).html()));
            });

            for (i = 0; i < listData.length; i++) {
                listTotal += listData[i];
            }

            for (i = 0; i < listData.length; i++) {
                var size = sliceSize(listData[i], listTotal);
                iterateSlices(id, size, pieElement, offset, i, 0, color[i]);
                $(dataElement + " li:nth-child(" + (i + 1) + ")").css("border-color", color[i]);
                offset += size;
            }
        }

        function shuffle(a) {
            var j, x, i;
            for (i = a.length; i; i--) {
                j = Math.floor(Math.random() * i);
                x = a[i - 1];
                a[i - 1] = a[j];
                a[j] = x;
            }

            return a;
        }

        function createPieCharts() {
            createPie('.pieID--micro-skills');
            createPie('.pieID--categories');
            createPie('.pieID--operations');
            createPie2('.pieID--micro-skills2');
            createPie2('.pieID--categories2');
            createPie2('.pieID--operations2');
        }

        createPieCharts();</script>
}
else
{
    <p>não têm permissões =(</p>
}







